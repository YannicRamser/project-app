Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"747f8f86-74b4-46cc-86c4-6c2f2bf05b0e\" name=\"Changes\" comment=\"Second commit\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"CSS File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Merge.Settings\">\r\n    <option name=\"BRANCH\" value=\"origin/marco\" />\r\n  </component>\r\n  <component name=\"Git.Rebase.Settings\">\r\n    <option name=\"NEW_BASE\" value=\"yannick\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;YannicRamser&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/YannicRamser/project-app&quot;,\r\n    &quot;accountId&quot;: &quot;ee02b8ab-2301-49ec-a0ef-fd77c808e585&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2v7HbHmvhH4QvyXQZpH7tjccxKz\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Node.js.server.js.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"marco\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/yanni/OneDrive - edu.ti.ch/CPT Locarno/2. anno/IA/Modulo 294/04 App/project-app\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"ts.external.directory.path\": \"C:\\\\Users\\\\barcella\\\\AppData\\\\Local\\\\Programs\\\\WebStorm\\\\plugins\\\\javascript-plugin\\\\jsLanguageServicesImpl\\\\external\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-WS-243.26053.12\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"747f8f86-74b4-46cc-86c4-6c2f2bf05b0e\" name=\"Changes\" comment=\"\" />\r\n      <created>1743489263221</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1743489263221</updated>\r\n      <workItem from=\"1743489264803\" duration=\"521000\" />\r\n      <workItem from=\"1743490002304\" duration=\"4214000\" />\r\n      <workItem from=\"1743496291769\" duration=\"5243000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Second commit\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Second commit\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 8dc12a89a82320a758c69a9e82c9dcdc2103c218)
+++ b/.idea/workspace.xml	(date 1743669200780)
@@ -4,8 +4,9 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="747f8f86-74b4-46cc-86c4-6c2f2bf05b0e" name="Changes" comment="Second commit">
+    <list default="true" id="747f8f86-74b4-46cc-86c4-6c2f2bf05b0e" name="Changes" comment="get API Marco + Ponze">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/backend/server.js" beforeDir="false" afterPath="$PROJECT_DIR$/backend/server.js" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -52,23 +53,23 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Node.js.server.js.executor": "Run",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "RunOnceActivity.git.unshallow": "true",
-    "git-widget-placeholder": "marco",
-    "ignore.virus.scanning.warn.message": "true",
-    "last_opened_file_path": "C:/Users/yanni/OneDrive - edu.ti.ch/CPT Locarno/2. anno/IA/Modulo 294/04 App/project-app",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "ts.external.directory.path": "C:\\Users\\barcella\\AppData\\Local\\Programs\\WebStorm\\plugins\\javascript-plugin\\jsLanguageServicesImpl\\external",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;Node.js.server.js.executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;marco&quot;,
+    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/yanni/OneDrive - edu.ti.ch/CPT Locarno/2. anno/IA/Modulo 294/04 App/project-app&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;ts.external.directory.path&quot;: &quot;C:\\Users\\barcella\\AppData\\Local\\Programs\\WebStorm\\plugins\\javascript-plugin\\jsLanguageServicesImpl\\external&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
@@ -87,7 +88,17 @@
       <workItem from="1743489264803" duration="521000" />
       <workItem from="1743490002304" duration="4214000" />
       <workItem from="1743496291769" duration="5243000" />
+      <workItem from="1743662324696" duration="5534000" />
     </task>
+    <task id="LOCAL-00001" summary="get API Marco + Ponze">
+      <option name="closed" value="true" />
+      <created>1743602291115</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1743602291115</updated>
+    </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -106,6 +117,7 @@
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Second commit" />
-    <option name="LAST_COMMIT_MESSAGE" value="Second commit" />
+    <MESSAGE value="get API Marco + Ponze" />
+    <option name="LAST_COMMIT_MESSAGE" value="get API Marco + Ponze" />
   </component>
 </project>
\ No newline at end of file
Index: backend/server.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { config } from \"dotenv\";\r\nimport express from \"express\";\r\nimport mysql from \"mysql2\";\r\nimport cors from \"cors\";\r\n\r\nconfig();\r\nconst app = express();\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\n// Connessione al database\r\nconst db = mysql.createConnection({\r\n    host: \"localhost\",\r\n    user: \"root\",\r\n    password: \"flexibleduck5072\",\r\n    database: \"project_app\"\r\n});\r\n\r\ndb.connect((err) => {\r\n    if (err) {\r\n        console.error(\"Errore di connessione al DB:\", err);\r\n        return;\r\n    }\r\n    console.log(\"Connesso a MySQL\");\r\n});\r\n\r\n// Endpoint di test\r\napp.get(\"/api/studenti\", (req, res) => {\r\n    db.query(\"SELECT * FROM Materie\", (err, results) => {\r\n        if (err) {\r\n            res.status(500).json({ error: err.message });\r\n            return;\r\n        }\r\n        res.json(results);\r\n    });\r\n});\r\n\r\n// Endpoint di login\r\napp.get(\"/api/login\", (req, res) => {\r\n    const { username, password } = req.query;\r\n\r\n    if (!username || !password) {\r\n        return res.status(400).json({ success: false, id: null, message: \"Username e password richiesti\" });\r\n    }\r\n\r\n    // Controllo nella tabella Studenti\r\n    const queryStudente = \"SELECT id FROM studenti WHERE username = ? AND password = ? LIMIT 1\";\r\n    db.query(queryStudente, [username, password], (err, results) => {\r\n        if (err) {\r\n            return res.status(500).json({ success: false, id: null, error: err.message });\r\n        }\r\n\r\n        if (results.length > 0) {\r\n            return res.json({ success: true, id: results[0].id, ruolo: \"studente\" });\r\n        }\r\n\r\n        // Se non trovato in studenti, cerca nei docenti\r\n        const queryDocente = \"SELECT id FROM docenti WHERE username = ? AND password = ? LIMIT 1\";\r\n        db.query(queryDocente, [username, password], (err2, results2) => {\r\n            if (err2) {\r\n                return res.status(500).json({ success: false, id: null, error: err2.message });\r\n            }\r\n\r\n            if (results2.length > 0) {\r\n                return res.json({ success: true, id: results2[0].id, ruolo: \"docente\" });\r\n            } else {\r\n                return res.status(401).json({ success: false, id: null, message: \"Credenziali non valide\" });\r\n            }\r\n        });\r\n    });\r\n});\r\n\r\n// Avvia il server\r\nconst PORT = 3000;\r\napp.listen(PORT, () => {\r\n    console.log('Server in ascolto su http://localhost:3000');\r\n});
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/server.js b/backend/server.js
--- a/backend/server.js	(revision 8dc12a89a82320a758c69a9e82c9dcdc2103c218)
+++ b/backend/server.js	(date 1743669394040)
@@ -24,18 +24,7 @@
     console.log("Connesso a MySQL");
 });
 
-// Endpoint di test
-app.get("/api/studenti", (req, res) => {
-    db.query("SELECT * FROM Materie", (err, results) => {
-        if (err) {
-            res.status(500).json({ error: err.message });
-            return;
-        }
-        res.json(results);
-    });
-});
-
-// Endpoint di login
+// Cerca studente in base a username e password
 app.get("/api/login", (req, res) => {
     const { username, password } = req.query;
 
@@ -70,6 +59,44 @@
     });
 });
 
+// Cerca corso in base a id
+app.get("/api/corso/:id", (req, res) => {
+    const corsoId = req.params.id;
+    db.query("SELECT nome FROM materie WHERE id = ? LIMIT 1", [corsoId], (err, results) => {
+        if (err) {
+            res.status(500).json({ error: err.message });
+            return;
+        }
+        if (results.length === 0) {
+            res.status(404).json({ error: "Corso non trovato" });
+            return;
+        }
+        res.json({ nome: results[0].nome });
+    });
+});
+
+// cerca corso in base a partecipanti
+app.get("/api/corso/studente/:studenteid", (req, res) => {
+    const { studenteId } = req.query;
+
+    if (!studenteId) {
+        return res.status(400).json({ success: false, id: null, message: "Id studente richiesto" });
+    }
+
+    // Controllo nella tabella Studenti
+    const queryCorso = "SELECT materia_id FROM studentiMaterie WHERE studente_id = ?";
+    db.query(queryCorso, [studenteId], (err, results) => {
+        if (err) {
+            return res.status(500).json({ success: false, id: null, error: err.message });
+        }
+        if (results.length === 0) {
+            res.status(404).json({ error: "Corso non trovato" });
+            return;
+        }
+        res.json({ materia_id: results[0].materia_id });
+    });
+});
+
 // Avvia il server
 const PORT = 3000;
 app.listen(PORT, () => {
